{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fnil\fcharset0 AndaleMono;}
{\colortbl;\red255\green255\blue255;\red47\green255\blue18;\red0\green0\blue0;\red46\green174\blue187;
\red0\green255\blue0;\red47\green180\blue29;}
{\*\expandedcolortbl;;\cssrgb\c15686\c99608\c7843;\csgray\c0\c90000;\cssrgb\c20198\c73241\c78251;
\csgenericrgb\c0\c100000\c0;\cssrgb\c20239\c73899\c14948;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 \CocoaLigature0 November 07, 2019 - 17:04:24\
Django version 1.10, using settings 'book_authors_proj.settings'\
Starting development server at http://127.0.0.1:8000/\
Quit the server with CONTROL-C.\
^C(djangoPy3Env) Lynneas-MacBook-Air:book_authors_proj lynneasmoyer$ python manage.py makemigrations\
\cf4 Migrations for 'books_authors_app':\cf2 \
  \cf5 apps/books_authors_app/migrations/0001_initial.py\cf2 :\
    - Create model Author\
    - Create model Book\
    - Add field books to author\
(djangoPy3Env) Lynneas-MacBook-Air:book_authors_proj lynneasmoyer$ python manage.py migrate\
\cf4 Operations to perform:\cf2 \
\cf5   Apply all migrations: \cf2 admin, auth, books_authors_app, contenttypes, sessions\
\cf4 Running migrations:\cf2 \
  Rendering model states...\cf6  DONE\cf2 \
  Applying contenttypes.0001_initial...\cf6  OK\cf2 \
  Applying auth.0001_initial...\cf6  OK\cf2 \
  Applying admin.0001_initial...\cf6  OK\cf2 \
  Applying admin.0002_logentry_remove_auto_add...\cf6  OK\cf2 \
  Applying contenttypes.0002_remove_content_type_name...\cf6  OK\cf2 \
  Applying auth.0002_alter_permission_name_max_length...\cf6  OK\cf2 \
  Applying auth.0003_alter_user_email_max_length...\cf6  OK\cf2 \
  Applying auth.0004_alter_user_username_opts...\cf6  OK\cf2 \
  Applying auth.0005_alter_user_last_login_null...\cf6  OK\cf2 \
  Applying auth.0006_require_contenttypes_0002...\cf6  OK\cf2 \
  Applying auth.0007_alter_validators_add_error_messages...\cf6  OK\cf2 \
  Applying auth.0008_alter_user_username_max_length...\cf6  OK\cf2 \
  Applying books_authors_app.0001_initial...\cf6  OK\cf2 \
  Applying sessions.0001_initial...\cf6  OK\cf2 \
(djangoPy3Env) Lynneas-MacBook-Air:book_authors_proj lynneasmoyer$ python manage.py shell\
Python 3.7.4 (default, Oct 12 2019, 18:55:45) \
[Clang 10.0.0 (clang-1000.11.45.5)] on darwin\
Type "help", "copyright", "credits" or "license" for more information.\
(InteractiveConsole)\
>>> from apps.books_authors_app.models import *\
>>> Book.objects.create(title='C Sharp', desc='book about C Sharp')\
Book: C Sharp\
>>> Book.objects.create(title='Java', desc='book about Java')\
Book: Java\
>>> Book.objects.create(title='Python', desc='book about python')\
Book: Python\
>>> Book.objects.create(title='PHP', desc='book about PHP')\
Book: PHP\
>>> Book.ojbects.create(title='Ruby', desc='book about Ruby')\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
AttributeError: type object 'Book' has no attribute 'ojbects'\
>>> Book.objects.create(title='Ruby', desc='book about Ruby')\
Book: Ruby\
>>> Author.objects.create(first_name='Jane', last_name='Austen')\
<Author: Author object>\
>>>  Author.objects.create(first_name='Emilye', last_name='Dickinson')\
  File "<console>", line 1\
    Author.objects.create(first_name='Emilye', last_name='Dickinson')\
    ^\
IndentationError: unexpected indent\
>>> Author.objects.create(first_name='Emily', last_name='Dickinson')\
<Author: Author object>\
>>> Author.objects.create(first_name='Fyodor', last_name='Dostoevksy')\
<Author: Author object>\
>>> Author.objects.create(first_name='Williamy', last_name='Shakespeare')\
<Author: Author object>\
>>> Author.objects.create(first_name='Lau', last_name='Tzu')\
<Author: Author object>\
>>> exit()\
(djangoPy3Env) Lynneas-MacBook-Air:book_authors_proj lynneasmoyer$ python manage.py makemigrations\
You are trying to add a non-nullable field 'notes' to author without a default; we can't do that (the database needs something to populate existing rows).\
Please select a fix:\
 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)\
 2) Quit, and let me add a default in models.py\
Select an option: 1\
Please enter the default value now, as valid Python\
The datetime and django.utils.timezone modules are available, so you can do e.g. timezone.now\
Type 'exit' to exit this prompt\
>>> 'author notes'\
\cf4 Migrations for 'books_authors_app':\cf2 \
  \cf5 apps/books_authors_app/migrations/0002_author_notes.py\cf2 :\
    - Add field notes to author\
(djangoPy3Env) Lynneas-MacBook-Air:book_authors_proj lynneasmoyer$ python manage.py migrate\
\cf4 Operations to perform:\cf2 \
\cf5   Apply all migrations: \cf2 admin, auth, books_authors_app, contenttypes, sessions\
\cf4 Running migrations:\cf2 \
  Rendering model states...\cf6  DONE\cf2 \
  Applying books_authors_app.0002_author_notes...\cf6  OK\cf2 \
(djangoPy3Env) Lynneas-MacBook-Air:book_authors_proj lynneasmoyer$ python manage.py shell\
Python 3.7.4 (default, Oct 12 2019, 18:55:45) \
[Clang 10.0.0 (clang-1000.11.45.5)] on darwin\
Type "help", "copyright", "credits" or "license" for more information.\
(InteractiveConsole)\
>>> from apps.books_authors_app.models import *\
>>> c_sharp_book=Book.objects.get(id=1)\
>>> c_sharp_book.title='C#'\
>>> c_sharp_book.save()\
>>> x = Author.objects.get(id=4)\
>>> x.first_name='Bill'\
>>> x.save()\
>>> book_1 = Book.objects.get(id=1)\
>>> author_1=Author.objects.get(id=1)\
>>> author_1.books.add(book_1)\
>>> author_1.books\
<django.db.models.fields.related_descriptors.create_forward_many_to_many_manager.<locals>.ManyRelatedManager object at 0x10fee6d50>\
>>> Objects.author.all()\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
NameError: name 'Objects' is not defined\
>>> Author.objects.all()\
<QuerySet [Author: Jane Austen, Author: Emily Dickinson, Author: Fyodor Dostoevksy, Author: Bill Shakespeare, Author: Lau Tzu]>\
>>> author_1.books\
<django.db.models.fields.related_descriptors.create_forward_many_to_many_manager.<locals>.ManyRelatedManager object at 0x10fee6f10>\
>>> book_2=Book.objects.get(id=2)\
>>> author_1.books.add(book_2)\
>>> author_1.books.all()\
<QuerySet [Book: C#, Book: Java]>\
>>> book_3=Book.objects.get(id=2)\
>>> Ojbects.author.get(id=2).books.add(book_1, book_2, book_3)\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
NameError: name 'Ojbects' is not defined\
>>> Objects.author.get(id=2).books.add(book_1, book_2, book_3)\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
NameError: name 'Objects' is not defined\
>>> Author.objects.get(id=2).books.add(book_1, book_2, book_3)\
>>> Author.objects.get(id=2).books.all()\
<QuerySet [Book: C#, Book: Java]>\
>>> book_3=Book.objects.get(id=3)\
>>> Author.objects.get(id=2).books.add( book_3)\
>>> Author.objects.get(id=2).books.all()\
<QuerySet [Book: C#, Book: Java, Book: Python]>\
>>> book_4=Book.objects.get(id=4)\
>>> Author.objects.get(id=3).books.add(book_1, book_2, book_3, book_4)\
>>> book_5=Book.objects.get(id=5)\
>>> Author.objects.get(id=4).books.add(all)\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
  File "/Users/lynneasmoyer/Documents/CodingDojo/Python/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/fields/related_descriptors.py", line 881, in add\
    self._add_items(self.source_field_name, self.target_field_name, *objs)\
  File "/Users/lynneasmoyer/Documents/CodingDojo/Python/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/fields/related_descriptors.py", line 1028, in _add_items\
    '%s__in' % target_field_name: new_ids,\
  File "/Users/lynneasmoyer/Documents/CodingDojo/Python/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/query.py", line 794, in filter\
    return self._filter_or_exclude(False, *args, **kwargs)\
  File "/Users/lynneasmoyer/Documents/CodingDojo/Python/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/query.py", line 812, in _filter_or_exclude\
    clone.query.add_q(Q(*args, **kwargs))\
  File "/Users/lynneasmoyer/Documents/CodingDojo/Python/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/sql/query.py", line 1227, in add_q\
    clause, _ = self._add_q(q_object, self.used_aliases)\
  File "/Users/lynneasmoyer/Documents/CodingDojo/Python/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/sql/query.py", line 1253, in _add_q\
    allow_joins=allow_joins, split_subq=split_subq,\
  File "/Users/lynneasmoyer/Documents/CodingDojo/Python/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/sql/query.py", line 1183, in build_filter\
    condition = lookup_class(lhs, value)\
  File "/Users/lynneasmoyer/Documents/CodingDojo/Python/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/lookups.py", line 19, in __init__\
    self.rhs = self.get_prep_lookup()\
  File "/Users/lynneasmoyer/Documents/CodingDojo/Python/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/fields/related_lookups.py", line 56, in get_prep_lookup\
    self.rhs = [target_field.get_prep_value(v) for v in self.rhs]\
  File "/Users/lynneasmoyer/Documents/CodingDojo/Python/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/fields/related_lookups.py", line 56, in <listcomp>\
    self.rhs = [target_field.get_prep_value(v) for v in self.rhs]\
  File "/Users/lynneasmoyer/Documents/CodingDojo/Python/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/fields/__init__.py", line 946, in get_prep_value\
    return int(value)\
TypeError: int() argument must be a string, a bytes-like object or a number, not 'builtin_function_or_method'\
>>> Author.objects.get(id=4).books.add(book_1, book_2, book_3, book_4, book_5)\
>>> book_3.authors.all()\
<QuerySet [Author: Emily Dickinson, Author: Fyodor Dostoevksy, Author: Bill Shakespeare]>\
>>> book_3.authors.remove(Author.objects.get(id=2)\
... book_3.authors.all()\
  File "<console>", line 2\
    book_3.authors.all()\
         ^\
SyntaxError: invalid syntax\
>>> book_3.authors.all()\
<QuerySet [Author: Emily Dickinson, Author: Fyodor Dostoevksy, Author: Bill Shakespeare]>\
>>> book_3.authors.remove(Author.objects.get(id=2))\
>>> book_3.authors.all()\
<QuerySet [Author: Fyodor Dostoevksy, Author: Bill Shakespeare]>\
>>> book_2.authors.add(Author.objects.get(id=5))\
>>> book_2.authors.all()\
<QuerySet [Author: Jane Austen, Author: Emily Dickinson, Author: Fyodor Dostoevksy, Author: Bill Shakespeare, Author: Lau Tzu]>\
>>> Author.objects.get(id=3).books.all()\
<QuerySet [Book: C#, Book: Java, Book: Python, Book: PHP]>\
>>> book_5.authors.all()\
<QuerySet [Author: Bill Shakespeare]>\
>>> }